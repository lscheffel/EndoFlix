version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./create_users_table.sql:/docker-entrypoint-initdb.d/01-create-users.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"  # Expose for local development

  redis:
    image: redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"  # Expose for local development

  endoflix:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      # Load all environment variables from .env.dev
      SECRET_KEY: ${SECRET_KEY}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      LOG_LEVEL: ${LOG_LEVEL}
      MAX_WORKERS: ${MAX_WORKERS}
      SNAPSHOT_WORKERS: ${SNAPSHOT_WORKERS}
      THUMB_WORKERS: ${THUMB_WORKERS}
      FFMPEG_TIMEOUT: ${FFMPEG_TIMEOUT}
      FLASK_ENV: ${FLASK_ENV}
      FLASK_DEBUG: ${FLASK_DEBUG}
    volumes:
      - .:/app  # Mount entire project for hot reloading
      - ./videos:/app/videos
      - ./logs:/app/logs
      - ./transcode:/app/transcode
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    # Override command for development with hot reloading
    command: python main.py

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local